{"version":3,"file":"static/js/589.4eb9a4cb.chunk.js","mappings":"8SACMA,EAAW,+BACJC,EAAU,mCAAG,oGACDC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,qBAA0C,CAC/DG,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAOjBA,EAASC,KAAKC,SAPG,2CAAH,qDAUVC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAAS,mCACTK,MAAOA,KAJoB,cACzBJ,EADyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,sDAWjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,GAAM,CAC1DR,OAAQ,CACNC,QAAS,sCAHe,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUdM,EAAmB,mCAAG,WAAMD,GAAN,uFACVT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHoB,cAC3BC,EAD2B,yBAO1BA,EAASC,KAAKO,MAPY,2CAAH,sDAUnBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qD,0JCzCjBQ,E,OAAWC,GAAAA,IAAH,0C,SC2ErB,EAvEqB,WAAO,IAAD,IACjBC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAGMC,EAAY,qBAFDC,EAAAA,EAAAA,MAEaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAgB7C,IAdAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAQ,mCAAG,8GAEQnB,EAAAA,EAAAA,IAAeO,GAFvB,OAEPa,EAFO,OAGbT,EAAaS,GACbP,EAAUO,EAAOR,QACjBS,QAAQC,IAAI,MAAOF,EAAOR,QALb,gDAObS,QAAQC,IAAR,MAPa,yDAAH,qDAUdH,GACD,GAAE,CAACZ,IAEAG,EAAW,CACb,IAAQa,EACNb,EADMa,YAAaC,EACnBd,EADmBc,MAAOC,EAC1Bf,EAD0Be,aAAcC,EACxChB,EADwCgB,WAAYC,EACpDjB,EADoDiB,SAEhDC,EAAYhB,EAAOiB,KAAI,SAAAC,GAAE,OAAIA,EAAGC,KAAO,IAAd,IAE/B,OACE,4BACE,SAAC,KAAD,CAASC,GAAIlB,EAAcmB,KAAK,SAAhC,mBAGA,8CACA,UAAC5B,EAAD,YACE,gBACE6B,IAAG,0CAAqCX,GACxCY,IAAKX,EACLY,MAAM,SAGR,4BACE,0BACG1B,EAAUc,MADb,IACqBC,EAAaY,MAAM,EAAG,GAD3C,QAGA,sCACA,uBAAIV,KACJ,yCAAiBW,KAAKC,MAAMC,OAAOd,IAAnC,QACA,oCACA,uBAAIE,WAGR,2BACE,yBACE,SAAC,KAAD,CAASI,GAAG,OAAOhB,MAAO,CAAEC,KAAMH,GAAgB2B,KAAG,EAArD,qBAIF,yBACE,SAAC,KAAD,CAAST,GAAG,UAAUhB,MAAO,CAAEC,KAAMH,GAArC,2BAKJ,SAAC,EAAA4B,SAAD,WACE,SAAC,KAAD,QAIP,CAEF,C","sources":["components/API/api.js","components/MoviesDetails/MoviesDetails.styled.js","components/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const fetchFilms = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchFilmsByCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const WrapInfo = styled.div`\n  display: flex;\n`;\n","import { fetchFilmsById } from 'components/API/api';\nimport { Suspense, useEffect } from 'react';\nimport { useState } from 'react';\nimport { NavLink, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { WrapInfo } from './MoviesDetails.styled';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movieData, setMovieData] = useState(null);\n  const [genres, setGenres] = useState([]);\n  const location = useLocation();\n\n  const backLinkHref = location.state?.from ?? '/';\n\n  useEffect(() => {\n    const getFetch = async () => {\n      try {\n        const result = await fetchFilmsById(movieId);\n        setMovieData(result);\n        setGenres(result.genres);\n        console.log('123', result.genres);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFetch();\n  }, [movieId]);\n\n  if (movieData) {\n    const { poster_path, title, release_date, popularity, overview } =\n      movieData;\n    const genresMap = genres.map(el => el.name + ', ');\n\n    return (\n      <div>\n        <NavLink to={backLinkHref} type=\"buttun\">\n          Back\n        </NavLink>\n        <h2>MovieDetailsPage</h2>\n        <WrapInfo>\n          <img\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            alt={title}\n            width=\"350\"\n          />\n\n          <div>\n            <h2>\n              {movieData.title}({release_date.slice(0, 4)})\n            </h2>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <p>User Score : {Math.round(Number(popularity))}%</p>\n            <h3>Genres</h3>\n            <p>{genresMap}</p>\n          </div>\n        </WrapInfo>\n        <ul>\n          <li>\n            <NavLink to=\"cast\" state={{ from: backLinkHref }} end>\n              Cast\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"reviews\" state={{ from: backLinkHref }}>\n              Reviews\n            </NavLink>\n          </li>\n        </ul>\n        <Suspense>\n          <Outlet />\n        </Suspense>\n      </div>\n    );\n  }\n  return;\n};\nexport default MovieDetails;\n"],"names":["BASE_URL","fetchFilms","axios","params","api_key","response","data","results","fetchFilmsByQuery","query","fetchFilmsById","id","fetchFilmsByCredits","cast","fetchFilmsReviews","WrapInfo","styled","movieId","useParams","useState","movieData","setMovieData","genres","setGenres","backLinkHref","useLocation","state","from","useEffect","getFetch","result","console","log","poster_path","title","release_date","popularity","overview","genresMap","map","el","name","to","type","src","alt","width","slice","Math","round","Number","end","Suspense"],"sourceRoot":""}