{"version":3,"file":"static/js/387.4aa7549b.chunk.js","mappings":"8SACMA,EAAW,+BACJC,EAAU,mCAAG,oGACDC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,qBAA0C,CAC/DG,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAOjBA,EAASC,KAAKC,SAPG,2CAAH,qDAUVC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAAS,mCACTK,MAAOA,KAJoB,cACzBJ,EADyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,sDAWjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,GAAM,CAC1DR,OAAQ,CACNC,QAAS,sCAHe,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUdM,EAAmB,mCAAG,WAAMD,GAAN,uFACVT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHoB,cAC3BC,EAD2B,yBAO1BA,EAASC,KAAKO,MAPY,2CAAH,sDAUnBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qD,4JCzCjBQ,EAAOC,EAAAA,GAAAA,IAAH,mFAKJC,EAAWD,EAAAA,GAAAA,GAAH,+C,kBCgDrB,EAhDa,WACX,IAAQE,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAgCE,EAAAA,EAAAA,UAAS,MAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA4BF,EAAAA,EAAAA,WAAS,GAArC,eAAOG,EAAP,KAAeC,EAAf,KAcA,IAZAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOd,EAAAA,EAAAA,IAAoBM,GAF3B,OAERS,EAFQ,OAGdL,EAAYK,GAHE,gDAKdC,QAAQC,IAAR,MALc,yDAAH,qDAQfH,GACD,GAAE,CAACR,IAEAG,EACF,OACE,4BACE,kCACA,SAACN,EAAD,UACGM,EAASS,KAAI,SAAAC,GAAE,OACd,UAACd,EAAD,YACE,gBACEe,IACED,EAAGE,cAAgBV,EAAnB,0CACuCQ,EAAGE,cACtCC,EAENC,IAAKJ,EAAGK,KACRC,MAAM,MACNC,OAAQ,kBAAMd,GAAU,EAAhB,KAEV,4BACE,kCACA,uBAAIO,EAAGK,QACP,uCACA,uBAAIL,EAAGQ,iBAfIR,EAAGpB,GADJ,QAwBzB,C","sources":["components/API/api.js","components/Cast/Cast.styled.js","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const fetchFilms = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchFilmsByCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n","import styled from 'styled-components';\n\nexport const List = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  list-style: none;\n`;\nexport const ListItem = styled.li`\n  margin-right: 15px;\n`;\n","import { fetchFilmsByCredits } from 'components/API/api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { List, ListItem } from './Cast.styled';\nimport Default from '../../Images/Default.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [castData, setCostData] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n\n  useEffect(() => {\n    const getFeatch = async () => {\n      try {\n        const result = await fetchFilmsByCredits(movieId);\n        setCostData(result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFeatch();\n  }, [movieId]);\n\n  if (castData) {\n    return (\n      <div>\n        <h3>Cast</h3>\n        <List>\n          {castData.map(el => (\n            <ListItem key={el.id}>\n              <img\n                src={\n                  el.profile_path && loaded\n                    ? `https://image.tmdb.org/t/p/w500/${el.profile_path}`\n                    : Default\n                }\n                alt={el.name}\n                width=\"150\"\n                onLoad={() => setLoaded(true)}\n              />\n              <div>\n                <h3>Name</h3>\n                <p>{el.name}</p>\n                <h3>Character</h3>\n                <p>{el.character}</p>\n              </div>\n            </ListItem>\n          ))}\n        </List>\n      </div>\n    );\n  }\n};\n\nexport default Cast;\n"],"names":["BASE_URL","fetchFilms","axios","params","api_key","response","data","results","fetchFilmsByQuery","query","fetchFilmsById","id","fetchFilmsByCredits","cast","fetchFilmsReviews","List","styled","ListItem","movieId","useParams","useState","castData","setCostData","loaded","setLoaded","useEffect","getFeatch","result","console","log","map","el","src","profile_path","Default","alt","name","width","onLoad","character"],"sourceRoot":""}