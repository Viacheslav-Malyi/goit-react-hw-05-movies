{"version":3,"file":"static/js/960.3a9f992b.chunk.js","mappings":"8SACMA,EAAW,+BACJC,EAAU,mCAAG,oGACDC,EAAAA,GAAAA,IAAA,UAAaF,EAAb,qBAA0C,CAC/DG,OAAQ,CACNC,QAAS,sCAHW,cAClBC,EADkB,yBAOjBA,EAASC,KAAKC,SAPG,2CAAH,qDAUVC,EAAiB,mCAAG,WAAMC,GAAN,uFACRP,EAAAA,GAAAA,IAAA,UAAaF,EAAb,iBAAsC,CAC3DG,OAAQ,CACNC,QAAS,mCACTK,MAAOA,KAJoB,cACzBJ,EADyB,yBAQxBA,EAASC,KAAKC,SARU,2CAAH,sDAWjBG,EAAc,mCAAG,WAAMC,GAAN,uFACLT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,GAAM,CAC1DR,OAAQ,CACNC,QAAS,sCAHe,cACtBC,EADsB,yBAOrBA,EAASC,MAPY,2CAAH,sDAUdM,EAAmB,mCAAG,WAAMD,GAAN,uFACVT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHoB,cAC3BC,EAD2B,yBAO1BA,EAASC,KAAKO,MAPY,2CAAH,sDAUnBC,EAAiB,mCAAG,WAAMH,GAAN,uFACRT,EAAAA,GAAAA,IAAA,UAAaF,EAAb,kBAA+BW,EAA/B,YAA6C,CAClER,OAAQ,CACNC,QAAS,sCAHkB,cACzBC,EADyB,yBAOxBA,EAASC,KAAKC,SAPU,2CAAH,qD,yGCJ9B,UAlCgB,WACd,IAAQQ,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,8GAEOP,EAAAA,EAAAA,IAAkBC,GAFzB,OAERO,EAFQ,OAGdH,EAAeG,GACfC,QAAQC,IAAI,aAAcF,GAJZ,gDAMdC,QAAQC,IAAR,MANc,yDAAH,qDASfH,GACD,GAAE,CAACN,IAEAG,EAAYO,OAAS,GAErB,0BACE,wBACGP,EAAYQ,KAAI,SAAAC,GAAE,OACjB,2BACE,wBAAKA,EAAGC,UACR,uBAAID,EAAGE,YAFAF,EAAGhB,GADK,SAUpB,gDACR,C","sources":["components/API/api.js","components/Revievs/Revievs.jsx"],"sourcesContent":["import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const fetchFilms = async () => {\n  const response = await axios.get(`${BASE_URL}/trending/all/day`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsByQuery = async query => {\n  const response = await axios.get(`${BASE_URL}/search/movie`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n      query: query,\n    },\n  });\n\n  return response.data.results;\n};\n\nexport const fetchFilmsById = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data;\n};\n\nexport const fetchFilmsByCredits = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/credits`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.cast;\n};\n\nexport const fetchFilmsReviews = async id => {\n  const response = await axios.get(`${BASE_URL}/movie/${id}/reviews`, {\n    params: {\n      api_key: 'e589c321259a53f509b2181777f7ae5f',\n    },\n  });\n\n  return response.data.results;\n};\n","import { fetchFilmsReviews } from 'components/API/api';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n\n  useEffect(() => {\n    const getFeatch = async () => {\n      try {\n        const result = await fetchFilmsReviews(movieId);\n        setReviewsData(result);\n        console.log('1243546578', result);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    getFeatch();\n  }, [movieId]);\n\n  if (reviewsData.length > 0) {\n    return (\n      <div>\n        <ul>\n          {reviewsData.map(el => (\n            <li key={el.id}>\n              <h3>{el.author}</h3>\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n  return <h3>There is no reviews.</h3>;\n};\n\nexport default Reviews;\n"],"names":["BASE_URL","fetchFilms","axios","params","api_key","response","data","results","fetchFilmsByQuery","query","fetchFilmsById","id","fetchFilmsByCredits","cast","fetchFilmsReviews","movieId","useParams","useState","reviewsData","setReviewsData","useEffect","getFeatch","result","console","log","length","map","el","author","content"],"sourceRoot":""}